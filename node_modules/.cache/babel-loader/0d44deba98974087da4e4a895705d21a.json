{"ast":null,"code":"import _toConsumableArray from\"D:\\\\Quiz-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _slicedToArray from\"D:\\\\Quiz-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{CircularProgress}from\"@material-ui/core\";import{React,useEffect,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import Question from\"./Question\";import Style from\"./Quiz.module.css\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Quiz=function Quiz(_ref){var _questions$currQuesti4;var name=_ref.name,score=_ref.score,setScore=_ref.setScore,questions=_ref.questions,setQuestions=_ref.setQuestions;var _useState=useState(),_useState2=_slicedToArray(_useState,2),options=_useState2[0],setOptions=_useState2[1];var _useState3=useState(Number(0)),_useState4=_slicedToArray(_useState3,2),currQuestion=_useState4[0],setCurrQuestion=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),correctAns=_useState6[0],setCorrectAns=_useState6[1];var navigate=useNavigate();useEffect(function(){var _questions$currQuesti,_questions$currQuesti2,_questions$currQuesti3;var allOptions=questions&&[(_questions$currQuesti=questions[currQuestion])===null||_questions$currQuesti===void 0?void 0:_questions$currQuesti.correct_answer].concat(_toConsumableArray((_questions$currQuesti2=questions[currQuestion])===null||_questions$currQuesti2===void 0?void 0:_questions$currQuesti2.incorrect_answers));setOptions(questions&&allOptions.sort(function(){return Math.random()-0.5;}));setCorrectAns(questions&&((_questions$currQuesti3=questions[currQuestion])===null||_questions$currQuesti3===void 0?void 0:_questions$currQuesti3.correct_answer));},[questions,currQuestion]);useEffect(function(){setQuestions();if(!name){navigate(\"/\");}},[]);return/*#__PURE__*/_jsx(_Fragment,{children:questions?/*#__PURE__*/_jsxs(\"div\",{className:Style[\"quiz\"],children:[/*#__PURE__*/_jsxs(\"h2\",{className:Style[\"quiz-user__name\"],style:{marginTop:\"20px\"},children:[\"Welcome \",name]}),/*#__PURE__*/_jsxs(\"div\",{className:Style[\"quiz__details\"],style:{marginTop:\"20px\"},children:[/*#__PURE__*/_jsx(\"span\",{children:(_questions$currQuesti4=questions[currQuestion])===null||_questions$currQuesti4===void 0?void 0:_questions$currQuesti4.category}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Current Score : \",score]})]}),/*#__PURE__*/_jsxs(\"h2\",{style:{marginTop:\"20px\"},children:[\"Question : \",currQuestion+1]}),/*#__PURE__*/_jsx(Question,{questions:questions,score:score,options:options,setScore:setScore,currQuestion:currQuestion,setCurrQuestion:setCurrQuestion,correctAns:correctAns})]}):/*#__PURE__*/_jsx(CircularProgress,{style:{margin:\"15% 47%\"},color:\"inherit\",size:50,thickness:3,className:Style[\"progress\"]})});};export default Quiz;","map":{"version":3,"sources":["D:/Quiz-app/src/Pages/Quiz/Quiz.js"],"names":["CircularProgress","React","useEffect","useState","useNavigate","Question","Style","Quiz","name","score","setScore","questions","setQuestions","options","setOptions","Number","currQuestion","setCurrQuestion","correctAns","setCorrectAns","navigate","allOptions","correct_answer","incorrect_answers","sort","Math","random","marginTop","category","margin"],"mappings":"wNAAA,OAASA,gBAAT,KAAiC,mBAAjC,CACA,OAASC,KAAT,CAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,C,6IAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAwD,+BAArDC,CAAAA,IAAqD,MAArDA,IAAqD,CAA/CC,KAA+C,MAA/CA,KAA+C,CAAxCC,QAAwC,MAAxCA,QAAwC,CAA9BC,SAA8B,MAA9BA,SAA8B,CAAnBC,YAAmB,MAAnBA,YAAmB,CACnE,cAA8BT,QAAQ,EAAtC,wCAAOU,OAAP,eAAgBC,UAAhB,eACA,eAAwCX,QAAQ,CAACY,MAAM,CAAC,CAAD,CAAP,CAAhD,yCAAOC,YAAP,eAAqBC,eAArB,eACA,eAAoCd,QAAQ,EAA5C,yCAAOe,UAAP,eAAmBC,aAAnB,eACA,GAAMC,CAAAA,QAAQ,CAAGhB,WAAW,EAA5B,CACAF,SAAS,CAAC,UAAM,yEACd,GAAMmB,CAAAA,UAAU,CAAGV,SAAS,0BAC1BA,SAAS,CAACK,YAAD,CADiB,gDAC1B,sBAAyBM,cADC,oDAEvBX,SAAS,CAACK,YAAD,CAFc,iDAEvB,uBAAyBO,iBAFF,EAA5B,CAIAT,UAAU,CAACH,SAAS,EAAIU,UAAU,CAACG,IAAX,CAAgB,iBAAMC,CAAAA,IAAI,CAACC,MAAL,GAAgB,GAAtB,EAAhB,CAAd,CAAV,CACAP,aAAa,CAACR,SAAS,2BAAIA,SAAS,CAACK,YAAD,CAAb,iDAAI,uBAAyBM,cAA7B,CAAV,CAAb,CACD,CAPQ,CAON,CAACX,SAAD,CAAYK,YAAZ,CAPM,CAAT,CASAd,SAAS,CAAC,UAAM,CACdU,YAAY,GACZ,GAAI,CAACJ,IAAL,CAAW,CACTY,QAAQ,CAAC,GAAD,CAAR,CACD,CACF,CALQ,CAKN,EALM,CAAT,CAOA,mBACE,yBACGT,SAAS,cACR,aAAK,SAAS,CAAEL,KAAK,CAAC,MAAD,CAArB,wBACE,YACE,SAAS,CAAEA,KAAK,CAAC,iBAAD,CADlB,CAEE,KAAK,CAAE,CAAEqB,SAAS,CAAE,MAAb,CAFT,sBAIWnB,IAJX,GADF,cAOE,aAAK,SAAS,CAAEF,KAAK,CAAC,eAAD,CAArB,CAAwC,KAAK,CAAE,CAAEqB,SAAS,CAAE,MAAb,CAA/C,wBACE,8CAAOhB,SAAS,CAACK,YAAD,CAAhB,iDAAO,uBAAyBY,QAAhC,EADF,cAEE,2CAAuBnB,KAAvB,GAFF,GAPF,cAWE,YAAI,KAAK,CAAE,CAAEkB,SAAS,CAAE,MAAb,CAAX,yBAA8CX,YAAY,CAAG,CAA7D,GAXF,cAYE,KAAC,QAAD,EACE,SAAS,CAAEL,SADb,CAEE,KAAK,CAAEF,KAFT,CAGE,OAAO,CAAEI,OAHX,CAIE,QAAQ,CAAEH,QAJZ,CAKE,YAAY,CAAEM,YALhB,CAME,eAAe,CAAEC,eANnB,CAOE,UAAU,CAAEC,UAPd,EAZF,GADQ,cAwBR,KAAC,gBAAD,EACE,KAAK,CAAE,CAAEW,MAAM,CAAE,SAAV,CADT,CAEE,KAAK,CAAC,SAFR,CAGE,IAAI,CAAE,EAHR,CAIE,SAAS,CAAE,CAJb,CAKE,SAAS,CAAEvB,KAAK,CAAC,UAAD,CALlB,EAzBJ,EADF,CAoCD,CAzDD,CA2DA,cAAeC,CAAAA,IAAf","sourcesContent":["import { CircularProgress } from \"@material-ui/core\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Question from \"./Question\";\r\nimport Style from \"./Quiz.module.css\";\r\n\r\nconst Quiz = ({ name, score, setScore, questions, setQuestions }) => {\r\n  const [options, setOptions] = useState();\r\n  const [currQuestion, setCurrQuestion] = useState(Number(0));\r\n  const [correctAns, setCorrectAns] = useState();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const allOptions = questions && [\r\n      questions[currQuestion]?.correct_answer,\r\n      ...questions[currQuestion]?.incorrect_answers,\r\n    ];\r\n    setOptions(questions && allOptions.sort(() => Math.random() - 0.5));\r\n    setCorrectAns(questions && questions[currQuestion]?.correct_answer);\r\n  }, [questions, currQuestion]);\r\n\r\n  useEffect(() => {\r\n    setQuestions();\r\n    if (!name) {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {questions ? (\r\n        <div className={Style[\"quiz\"]}>\r\n          <h2\r\n            className={Style[\"quiz-user__name\"]}\r\n            style={{ marginTop: \"20px\" }}\r\n          >\r\n            Welcome {name}\r\n          </h2>\r\n          <div className={Style[\"quiz__details\"]} style={{ marginTop: \"20px\" }}>\r\n            <span>{questions[currQuestion]?.category}</span>\r\n            <span>Current Score : {score}</span>\r\n          </div>\r\n          <h2 style={{ marginTop: \"20px\" }}>Question : {currQuestion + 1}</h2>\r\n          <Question\r\n            questions={questions}\r\n            score={score}\r\n            options={options}\r\n            setScore={setScore}\r\n            currQuestion={currQuestion}\r\n            setCurrQuestion={setCurrQuestion}\r\n            correctAns={correctAns}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <CircularProgress\r\n          style={{ margin: \"15% 47%\" }}\r\n          color=\"inherit\"\r\n          size={50}\r\n          thickness={3}\r\n          className={Style[\"progress\"]}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}