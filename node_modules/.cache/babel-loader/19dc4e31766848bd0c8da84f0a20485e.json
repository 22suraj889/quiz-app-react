{"ast":null,"code":"var _jsxFileName = \"D:\\\\Quiz-app\\\\src\\\\Pages\\\\Quiz\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@material-ui/core\";\nimport { React, useState } from \"react\";\nimport Style from \"./Question.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = _ref => {\n  _s();\n\n  var _questions$currQuesti;\n\n  let {\n    questions,\n    score,\n    options,\n    setScore,\n    currQuestion,\n    setCurrQuestion,\n    correctAns\n  } = _ref;\n  const [selected, setSelected] = useState();\n\n  const checkHandler = option => {\n    setSelected(option);\n\n    if (option === correctAns) {\n      setScore(score + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style[\"question\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style[\"question__que\"],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: questions && ((_questions$currQuesti = questions[currQuestion]) === null || _questions$currQuesti === void 0 ? void 0 : _questions$currQuesti.question)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style[\"question__option\"],\n      children: options && options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => checkHandler(option),\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style[\"question__action\"],\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Quit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"kXmc8az0Vkgq+bIqhRCCKCKZWzs=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["D:/Quiz-app/src/Pages/Quiz/Question.js"],"names":["Button","React","useState","Style","Question","questions","score","options","setScore","currQuestion","setCurrQuestion","correctAns","selected","setSelected","checkHandler","option","question","map","marginRight"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AACA,MAAMC,QAAQ,GAAG,QAQX;AAAA;;AAAA;;AAAA,MARY;AAChBC,IAAAA,SADgB;AAEhBC,IAAAA,KAFgB;AAGhBC,IAAAA,OAHgB;AAIhBC,IAAAA,QAJgB;AAKhBC,IAAAA,YALgB;AAMhBC,IAAAA,eANgB;AAOhBC,IAAAA;AAPgB,GAQZ;AACJ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;;AAEA,QAAMY,YAAY,GAAIC,MAAD,IAAY;AAC/BF,IAAAA,WAAW,CAACE,MAAD,CAAX;;AACA,QAAIA,MAAM,KAAKJ,UAAf,EAA2B;AACzBH,MAAAA,QAAQ,CAACF,KAAK,GAAG,CAAT,CAAR;AACD;AACF,GALD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEH,KAAK,CAAC,UAAD,CAArB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEA,KAAK,CAAC,eAAD,CAArB;AAAA,6BACE;AAAA,kBAAIE,SAAS,8BAAIA,SAAS,CAACI,YAAD,CAAb,0DAAI,sBAAyBO,QAA7B;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEb,KAAK,CAAC,kBAAD,CAArB;AAAA,gBACGI,OAAO,IACNA,OAAO,CAACU,GAAR,CAAaF,MAAD,iBACV;AAAqB,QAAA,OAAO,EAAE,MAAMD,YAAY,CAACC,MAAD,CAAhD;AAAA,kBACGA;AADH,SAAaA,MAAb;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJF,eAYE;AAAK,MAAA,SAAS,EAAEZ,KAAK,CAAC,kBAAD,CAArB;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,KAAK,EAAE;AAAEe,UAAAA,WAAW,EAAE;AAAf,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA5CD;;GAAMd,Q;;KAAAA,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport { React, useState } from \"react\";\r\nimport Style from \"./Question.module.css\";\r\nconst Question = ({\r\n  questions,\r\n  score,\r\n  options,\r\n  setScore,\r\n  currQuestion,\r\n  setCurrQuestion,\r\n  correctAns,\r\n}) => {\r\n  const [selected, setSelected] = useState();\r\n\r\n  const checkHandler = (option) => {\r\n    setSelected(option);\r\n    if (option === correctAns) {\r\n      setScore(score + 1);\r\n    }\r\n  };\r\n  return (\r\n    <div className={Style[\"question\"]}>\r\n      <div className={Style[\"question__que\"]}>\r\n        <p>{questions && questions[currQuestion]?.question}</p>\r\n      </div>\r\n      <div className={Style[\"question__option\"]}>\r\n        {options &&\r\n          options.map((option) => (\r\n            <button key={option} onClick={() => checkHandler(option)}>\r\n              {option}\r\n            </button>\r\n          ))}\r\n      </div>\r\n      <div className={Style[\"question__action\"]}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          style={{ marginRight: \"10px\" }}\r\n        >\r\n          Quit\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Next Question\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}